% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KorAPConnection.R
\docType{class}
\name{KorAPConnection-class}
\alias{KorAPConnection-class}
\alias{KorAPConnection}
\title{Connect to KorAP Server}
\description{
\code{KorAPConnection()} creates a connection to a KorAP server for corpus queries.
This is your starting point for all corpus analysis tasks.
}
\details{
Use \code{KorAPConnection()} to connect, then \code{corpusQuery()} to search, and
\code{fetchAll()} to retrieve results. For authorized access to restricted corpora,
use \code{auth()} or provide an \code{accessToken}.

The KorAPConnection object contains various configuration slots for advanced users:
KorAPUrl (server URL), apiVersion, accessToken (OAuth2 token),
timeout (request timeout), verbose (logging), cache (local caching),
and other technical parameters. Most users can ignore these implementation details.
}
\section{Basic Workflow}{


\if{html}{\out{<div class="sourceCode r">}}\preformatted{# Connect to KorAP
kcon <- KorAPConnection()

# Search for a term
query <- corpusQuery(kcon, "Ameisenplage")

# Get all results
results <- fetchAll(query)
}\if{html}{\out{</div>}}
}

\section{Authorization}{

For access to restricted corpora, authorize your connection:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{kcon <- KorAPConnection() |> auth()
}\if{html}{\out{</div>}}
}

\seealso{
Other initialization functions: 
\code{\link{auth,KorAPConnection-method}},
\code{\link{clearAccessToken,KorAPConnection-method}},
\code{\link{persistAccessToken,KorAPConnection-method}}
}
\concept{initialization functions}
